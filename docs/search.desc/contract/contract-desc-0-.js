searchState.loadedDescShard("contract", 0, "The entry point used when an external address initiates a …\nThe entry point used when an external address instantiates …\nThe entry point used when migrating a live contract …\nThe entry point used when an external address attemtpts to …\n<code>CosmosMsg::Any</code> is the replaces the “stargate message” …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis is the same structure as messages in <code>TxBody</code> from …\nThe attributes that will be emitted as part of a “wasm”…\nThe binary payload to include in the response.\nExtra, custom events separate from the main <code>wasm</code> one. …\nOptional list of messages to pass. These will be executed …\nHolds information about a loan pool addition.\nHolds information about a loan pool removal.\nThe collateral being added to the loan.\nThe collateral to be deleted from state\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Provenance messages associated with the loan.\nThe Provenance messages associated with the loan.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandles loan pool additions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidates the marker for loan pool addition or removal.\nHandle function that processes removal of contributors …\nHelper function to remove contributors from the loan pool.\nThis method is used to process loan pool contributors. It …\nHandle function that processes a list of loan pools to be …\nThis function handles the process of getting all states …\nHandles the querying of whitelist contributors from your …\nfunction defining if the marker has been added to the pool.\nGet Collateral from storage.\nThis function is declared as a public function named <code>remove</code>…\nSave Collateral to storage.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis function retrieves the list of contributors from the …\nRemoves a list of contributors from the whitelist.\nAdds a list of new contributors to the existing whitelist.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA helper that ensures address params are non-empty.\nA helper that ensures string params are non-empty.\nChecks if the defined settlment_date within the commitment …\nChecks if the commitment can settle. A settled commitment …\nChecks if the timestamp is expired.\nCreates an investment token name for the supplied security …\nContains the error value\nContains the success value")